{"version":3,"sources":["Progressbar.js","Emoji.js","About.js","App.js","reportWebVitals.js","index.js"],"names":["Progressbar","done","className","data-bs-toggle","data-bs-placement","title","style","opacity","width","parseInt","Emoji","sentiment","useState","mouthval","setMouthval","color","setColor","useEffect","cx","cy","r","fill","d","About","id","tabIndex","aria-labelledby","aria-hidden","type","data-bs-dismiss","aria-label","href","target","rel","App","state","comment","confidence","textrow","onChange","e","setState","name","value","length","onSubmit","preventDefault","data","text","axios","post","then","res","catch","console","log","data-bs-target","this","rows","placeholder","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.62c662d2.chunk.js","sourcesContent":["//https://www.youtube.com/watch?v=AbRgaY0khPM&ab_channel=FlorinPop\nimport React from 'react'\nimport './Progressbar.css'\n\nconst Progressbar = ({done}) => {\n\n\treturn (\n\t\t<div \n\t\t\tclassName=\"progress\" \n\t\t\tdata-bs-toggle=\"tooltip\" \n\t\t\tdata-bs-placement=\"bottom\" \n\t\t\ttitle=\"Confidence\"\n\t\t>\n\t\t\t<div className=\"progress-done\" style={{opacity: 1, width: `${parseInt(done)}%`}}>\n\t\t\t\t{parseInt(done)}%\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Progressbar","//https://learn-the-web.algonquindesign.ca/courses/web-dev-3/svg-smiley-face/\nimport React, { useState, useEffect } from 'react'\nimport \"./Emoji.css\"\n\nexport const Emoji = ({sentiment}) => {\n\n    const [mouthval, setMouthval] = useState(\"M40,90 Q70,90 100,90\");\n    const [color, setColor] = useState('#E3D96B')\n\n    useEffect(() => {\n        \n        if(sentiment === 'Positive') {\n            setMouthval(\"M40,90 Q70,120 100,90\")\n            setColor('#FFC75F')\n        } else if (sentiment === 'Negative') {\n            setMouthval(\"M40,100 Q70,80 100,100\")\n            setColor('#EB5858')\n        } else {\n            setMouthval(\"M40,90 Q70,90 100,90\")\n            setColor('#E3D96B')\n        }\n    }, [sentiment])\n\n    return (\n        <div className=\"emoji\" data-bs-toggle=\"tooltip\" data-bs-placement=\"bottom\" title=\"Sentiment\">\n            <div className=\"smiley\">\n                <svg>\n                    <circle className=\"face\" cx=\"70\" cy=\"70\" r=\"70\" style={{fill:color}}></circle>\n                    <circle className=\"left-eye\" cx =\"50\" cy=\"50\" r=\"10\" ></circle>\n                    <circle className=\"left-eye\" cx =\"90\" cy=\"50\" r=\"10\" ></circle>\n                    <path className=\"mouth\" d={mouthval}></path>\n                </svg>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport const About = () => {\n    return (\n        <div className=\"modal fade\" id=\"exampleModal\" tabIndex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n            <div className=\"modal-dialog modal-dialog-scrollable\">\n                <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">About</h5>\n                    <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                </div>\n                <div className=\"modal-body\">\n                    <strong>TechStack</strong>\n                    <ul>\n                        <li>Django</li>\n                        <li>ReactJs</li>\n                        <li>HTML</li>\n                        <li>CSS</li>\n                    </ul>\n                    <br/>\n                    <strong>Libraries Used</strong>\n                    <ul>\n                        <li>vaderSentiment (for sentiment analysis)</li>\n                        <li>django</li>\n                        <li>djangorestframework</li>\n                    </ul>\n                    <br/>\n                    <a href=\"https://github.com/krshubham12/Sentiment-Analysis-App\" target=\"_blank\" rel=\"noopener noreferrer\">Source Code</a>\n                </div>\n                <div className=\"modal-footer\">\n                    <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n                </div>\n                </div>\n            </div>\n        </div>\n    )\n}","import React, { Component } from 'react'\nimport axios from 'axios'\nimport './App.css'\n//import { CircleProgress } from './CircleProgress';\nimport Progressbar from './Progressbar';\nimport { Emoji } from './Emoji';\nimport { About } from './About';\n\nexport class App extends Component {\n\n  state = {\n    comment: '',\n    sentiment: '',\n    confidence: 0,\n    textrow: 2\n  };\n\n  onChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n    if ((this.state.textrow < parseInt(this.state.comment.length/27+2)))\n    {   this.setState({ textrow: parseInt(this.state.comment.length/27+2) })\n    } else if ((this.state.textrow > parseInt(this.state.comment.length/27+2))) {\n        this.setState({ textrow: parseInt(this.state.comment.length/27+2) })\n    }\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n    const data = { text:this.state.comment };\n    axios\n      .post('/api/', data)\n      .then(res => {\n        this.setState({ \n          sentiment:res.data.sentiment,\n          confidence: res.data.confidence,\n        })\n      })\n      .catch(e => console.log(e))\n    this.setState({comment: ''})\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n          <div className=\"container-fluid\">\n            <a className=\"navbar-brand\" href=\"#\">Sentiment Analysis</a>\n            <button \n                  className=\"btn btn-outline-success me-2\" \n                  type=\"button\"\n                  data-bs-toggle=\"modal\" \n                  data-bs-target=\"#exampleModal\"\n                >About</button>\n                  <About />\n          </div>\n        </nav>\n        <div id=\"task-container\">\n          <div id=\"task-wrapper\">\n            <div id=\"form-wrapper\">\n              <form onSubmit={this.onSubmit}  id=\"form\">\n                <div className=\"flex-wrapper\">\n                  <div>\n                    <textarea \n                      onChange={this.onChange}\n                      className=\"form-control\" \n                      id=\"comment\" \n                      value={this.state.comment}\n                      rows={this.state.textrow}\n                      type=\"text\" \n                      name=\"comment\" \n                      placeholder=\"Enter comment\" />\n                  </div>\n\n                  <div>\n                    <input id=\"submit\" className=\"btn btn-warning\" type=\"submit\" name=\"Add\" />\n                  </div>\n                </div>\n              </form>\n            </div>\n            <div id=\"info-wrapper\">\n              <p><strong>Sentiment:</strong> {this.state.sentiment}</p>\n              <p><strong>Confidence:</strong> {parseInt(this.state.confidence*100)}%</p>\n            </div>\n          </div>\n\n          <div id = \"result-wrapper\">\n            <Emoji sentiment={this.state.sentiment}/>\n            <Progressbar done={this.state.confidence * 100}/>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}